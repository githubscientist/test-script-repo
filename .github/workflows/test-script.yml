name: Test Script

on:
  push:
    branches:
      - main
      - test-branch  # Specify the branches to trigger the workflow

# jobs:
#   example_job:
#     runs-on: ubuntu-latest
#     env:
#       VAR_ONE: "value1"
#     steps:
#       - name: Step with variables
#         run: |
#           VAR_TWO="This will work: $VAR_ONE"  # Expands during execution
#           echo "VAR_TWO=$VAR_TWO" >> $GITHUB_ENV
    
#       - name: Print VAR_TWO
#         run: |
#             echo "VAR_TWO is: $VAR_TWO"
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     env:
#       VAR1: "Hello"
#     steps:
#       - name: Use the environment variable in a step
#         env:
#           VAR2: "DYNAMIC ${VAR1}"
#         run: echo $VAR2
#       - name: Print
#         run: echo $VAR2

# jobs:
#   build:
#     env:
#       BASE_URL: https://example.com
#       API_VERSION: v1
#       API_URL: ${{ env.BASE_URL }}/api/${{ env.API_VERSION }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Print API URL
#         run: echo $API_URL


# name: Example Workflow

# on: [push]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Set Environment Variables
#         id: set_envs
#         run: |
#           echo "VAR_ONE=Hello" >> $GITHUB_ENV
#           echo "VAR_TWO=${{ env.VAR_ONE }} World" >> $GITHUB_ENV

#       - name: Use the variables
#         run: echo "${{ env.VAR_ONE }} and ${{ env.VAR_TWO }}"

# name: Example Conditional Vars

# on: [push]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Set initial environment variable
#         id: init
#         run: echo "VAR_ONE=Hello" >> $GITHUB_ENV

#       - name: Conditionally set another variable
#         id: conditional
#         run: |
#           if [ "$VAR_ONE" == "Hello" ]; then
#             echo "VAR_TWO=${VAR_ONE} World" >> $GITHUB_ENV
#           fi

#       - name: Use environment variables
#         run: echo "VAR_ONE is ${{ env.VAR_ONE }} and VAR_TWO is ${{ env.VAR_TWO }}"

# name: Example using environment variables

# on: [push]

# env:
#   GLOBAL_ENV: "global_value"  # Global scope

# jobs:
#   example_job:
#     runs-on: ubuntu-latest
#     env:
#       VAR_ONE: "value1"
#     steps:
#       - name: Step with variables
#         run: |
#           VAR_TWO="This will work: $VAR_ONE"  # Expands during execution
#           echo "VAR_TWO=$VAR_TWO" >> $GITHUB_ENV

# jobs:
#   example:
#     runs-on: ubuntu-latest
#     env:
#       BASE_URL: 'https://example.com'
#     steps:
#       - name: Set variables
#         id: vars
#         run: echo "URL=${BASE_URL}/path" >> $GITHUB_ENV

#       - name: Use the variable
#         run: echo "The URL is $URL"

# jobs:
#   example:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Set base URL
#         id: set_base_url
#         run: echo "BASE_URL=https://example.com" >> $GITHUB_ENV

#       - name: Set derived URL
#         id: set_derived_url
#         run: echo "FULL_URL=${{ env.BASE_URL }}/path" >> $GITHUB_ENV

#       - name: Use composed URL
#         run: echo "The full URL is $FULL_URL"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FIRST_VAR: first_value
    steps:
      - name: Declare and use environment variable in a step
        env:
          SECOND_VAR: second_value
          THIRD_VAR: $SECOND_VAR_suffix # This references SECOND_VAR from the same step's env 
        run: echo "Third var is $THIRD_VAR"












